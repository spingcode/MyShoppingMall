<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kaola.seller.mapper.SellerMapper" >
  <resultMap id="BaseResultMap" type="com.kaola.seller.entity.Seller" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="seller_account" property="sellerAccount" jdbcType="VARCHAR" />
    <result column="seller_password" property="sellerPassword" jdbcType="VARCHAR" />
    <result column="seller_mobile" property="sellerMobile" jdbcType="VARCHAR" />
    <result column="deleted_flag" property="deletedFlag" jdbcType="BIT" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>


  <insert id="addSeller" parameterType="com.kaola.seller.entity.Seller">
    INSERT INTO seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="sellerAccount != null" >
        seller_account,
      </if>
      <if test="sellerPassword != null" >
        seller_password,
      </if>
      <if test="sellerMobile != null" >
        seller_mobile,
      </if>
      <if test="deletedFlag != null" >
        deleted_flag,
      </if>
    </trim>
    <trim prefix="value(" suffix=")" suffixOverrides=",">
      <if test="sellerId != null" >
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null" >
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null" >
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null" >
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null" >
        #{deletedFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <update id="deleteSellerBySellerId" parameterType="java.lang.String">
    update seller
    set deleted_flag=1
    where seller_id = #{sellerId,jdbcType=VARCHAR}
    AND
    deleted_flag =0;
  </update>
  <update id="deleteSellerBySellerAccount" parameterType="java.lang.String">
    update seller
    set deleted_flag=1
    where seller_account = #{sellerAccount,jdbcType=VARCHAR}
    AND
    deleted_flag =0;
  </update>
  <update id="deleteSellerBySellerMobile" parameterType="java.lang.String">
    update seller
    set deleted_flag=1
    where seller_mobile = #{sellerMobile,jdbcType=VARCHAR}
    AND
    deleted_flag =0;
  </update>

  <select id="getAllSeller" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from seller
    where
    deleted_flag=0;
  </select>
  <select id="getSellerBySellerId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List"/>
    from seller
    where
    seller_id = #{sellerId,jdbcType=VARCHAR}
    AND
    deleted_flag=0;
  </select>
  <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Seller" >
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="Seller" >
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="sellerAccount != null" >
        seller_account,
      </if>
      <if test="sellerPassword != null" >
        seller_password,
      </if>
      <if test="sellerMobile != null" >
        seller_mobile,
      </if>
      <if test="deletedFlag != null" >
        deleted_flag,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null" >
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null" >
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null" >
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null" >
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Seller" >
    update seller
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null" >
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null" >
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null" >
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null" >
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Seller" >
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>