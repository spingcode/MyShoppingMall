<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kaola.com.seller.mapper.SellerMapper">
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="kaola.com.seller.entity.Seller">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="seller_account" jdbcType="VARCHAR" property="sellerAccount" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_mobile" jdbcType="VARCHAR" property="sellerMobile" />
    <result column="deleted_flag" jdbcType="BIT" property="deletedFlag" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, seller_id, seller_account, seller_password, seller_mobile, deleted_flag, created_on
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="kaola.com.seller.entity.Seller">
    insert into seller (id, seller_id, seller_account, 
      seller_password, seller_mobile, deleted_flag, 
      created_on)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=VARCHAR}, #{sellerAccount,jdbcType=VARCHAR}, 
      #{sellerPassword,jdbcType=VARCHAR}, #{sellerMobile,jdbcType=VARCHAR}, #{deletedFlag,jdbcType=BIT}, 
      #{createdOn,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="kaola.com.seller.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerAccount != null">
        seller_account,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerMobile != null">
        seller_mobile,
      </if>
      <if test="deletedFlag != null">
        deleted_flag,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kaola.com.seller.entity.Seller">
    update seller
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="sellerAccount != null">
        seller_account = #{sellerAccount,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerMobile != null">
        seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      </if>
      <if test="deletedFlag != null">
        deleted_flag = #{deletedFlag,jdbcType=BIT},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="kaola.com.seller.entity.Seller">
    update seller
    set seller_id = #{sellerId,jdbcType=VARCHAR},
      seller_account = #{sellerAccount,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_mobile = #{sellerMobile,jdbcType=VARCHAR},
      deleted_flag = #{deletedFlag,jdbcType=BIT},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>